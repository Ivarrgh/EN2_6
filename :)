import os
import ast
import pandas as pd
import numpy as np
import tkinter

os.getcwd()
os.chdir('C:/Users/65877/Downloads/EN2_6-main/data')

def setupDataframe():

    global metadata
    metadata = pd.read_csv('/Users/65877/Downloads/EN2_6-main/data/movies_metadata.csv',
                           low_memory=False, header=0)

    shownMovies = metadata.copy(
    ).loc[metadata['vote_count'] >= metadata['vote_count'].quantile(0.85)]
    shownMovies['wr'] = shownMovies.apply(weighted_rating, axis=1)
    shownMovies = shownMovies.sort_values('wr', ascending=False)

    shownMovies = metadata.copy().loc[metadata['vote_count'] >= metadata['vote_count'].quantile(0.85)]
    shownMovies['wr'] = shownMovies.apply(weighted_rating, axis=1)
    shownMovies = shownMovies.sort_values('wr', ascending=False)
    
    shownMovies['genres'] = shownMovies['genres'].apply(ast.literal_eval)
    shownMovies['year'] = pd.to_datetime(metadata['release_date'], errors='coerce').apply(
        lambda x: str(x).split('-')[0] if x != np.nan else np.nan)
    return shownMovies


def menu():
    print("""
          1: VIEW TOP MOVIES 
          2: TOP MOVIES BY GENRE 
          3: TOP MOVIES BY STUDIO
          4: TOP MOVIES BY RELEASE DATE
          5: EXIT""")
    
    return ()

def weighted_rating(x):
    v = x['vote_count']
    r = x['vote_average']
    c = metadata['vote_average'].mean().astype(int)
    m = metadata['vote_count'].quantile(0.9)
    
    return ((v/(v+m) * r) + (m/(m+v) * c))


def menu2():
    print("""
          1: WB
          2: DISNEY
          3: UNIVERSAL""")

def menu3():
    print("""
          1: 2015
          2: 2016
          3. 2017
          4. 2018""")

def conversion(data):
    array = []
    for row in data:
        array.append(row['name'])
    return array
    

def series(x):
    return pd.Series(x, dtype=object)



#print("Welcome to EN2_6's movie recommendation system!!")
#print("How can we help to filter movies for you?")

def main(df):
    shownMovies=df
    window = tkinter.Tk()
    window.title("GUI for Netflix")
    top_frame = tkinter.Frame(window).pack()
    left_frame = tkinter.Frame(window).pack(side = "left")
    bottom_frame = tkinter.Frame(window).pack(side = "bottom")
    right_frame = tkinter.Frame(window).pack(side = "right")
    button1 = tkinter.Button(top_frame, text = "View top movies?", fg = "red").pack()
    button2 = tkinter.Button(left_frame, text = "view by genre", fg = "blue").pack(side = "left")
    button3 = tkinter.Button(right_frame, text = "view by release date", fg = "yellow").pack(side = "right")
    button4 = tkinter.Button(bottom_frame, text = "view by studio", fg = "green").pack(side = "bottom")
    window.mainloop()
    
    option = True
    
    while option: 
        menu()
        choice = int(input('Please enter your choice [1-5] : '))
        
        if choice == 1: 
            num = int(input("How many top movies do you want to see? "))
            shownMovies = shownMovies.sort_values(by=['vote_average'], ascending=False)
            shownMovies = shownMovies[['title', 'vote_average']].head(num)
            print(shownMovies.to_string(index=False))
            
            buffer = input("Press any key to continue.")
            continue
        
        elif choice == 2:
            gen = input("What genre are you looking for? ").capitalize()
            num = int(input("How many movies do you want to see? "))
            
            shownMovies['genres'] = shownMovies['genres'].apply(conversion)
            
            s = shownMovies.genres.apply(series).stack().reset_index(level=1, drop=True)
            s.name = 'genre'
            
            shownMovies = shownMovies.drop('genres', axis=1).join(s)
            
            x = shownMovies[shownMovies.genre == gen].sort_values('wr', ascending=False)
            
            print(x['title'].head(num).to_string(index=False))
            
            buffer = input("Press enter to continue.")
            continue
        
        elif choice == 3:
            print("Please choose the studio you're most interested in!")
            menu2()
            stud = int(input("Which studio? "))
            num = int(input("How many movies do you want to see? "))
            
            shownMovies['production_companies'] = shownMovies['production_companies'].apply(conversion)
            
            studio = shownMovies.production_companies.apply(series).stack().reset_index(level=1, drop=True)
            studio.name = 'studioS'
            shownMovies = shownMovies.drop('production_companies', axis=1).join(studio)
            
            if stud == 1:
                x = shownMovies[shownMovies.studioS == "Warner Bros."].sort_values('wr', ascending=False)
                print(x['title'].head(num).to_string(index=False))
                buffer = input("Press enter to continue.")
                
            elif stud == 2:
                x = shownMovies[shownMovies.studioS == 'Walt Disney Pictures'].sort_values('wr', ascending=False)
                print(x['title'].head(num).to_string(index=False))
                buffer = input("Press enter to continue.")
                
            elif stud == 3:
                x = shownMovies[shownMovies.studioS == 'Universal Pictures'].sort_values('wr', ascending=False)
                print(x['title'].head(num).to_string(index=False))
                buffer = input("Press enter to continue.")
                
            else:
                print("We're unable to compute that request. Please try again :)")
            
            continue
        
        elif choice == 4:
  
              year = input("Please enter a year (2017 or earlier): ")
              num = int(input("How many movies do you want to see? "))
  
              l = shownMovies.year.apply(
                  series).stack().reset_index(level=1, drop=True)
              l.name = 'year'
              shownMovies = shownMovies.drop('year', axis=1).join(l)
              x = shownMovies[shownMovies.year == year]
  
              print(f"Here are the top movies released in {year}")
              print(x['title'].head(num).to_string())
  
              buffer = input("Press enter to continue.")
              continue
        elif choice == 5:
                    option=False
                    print("Thank you for using our system, we hope it has helped you! Have a nice day :D")
                    break
            
        else:
                print("We're unable to compute that request. Please try again :)")
                continue
        

        
if __name__ == '__main__':
    df = setupDataframe()
    main(df)

